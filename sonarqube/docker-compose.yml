version: "3.7"

services:
  sonarqube:
    image: sonarqube:${SONARQUBE_TAG:-latest}
# Need a delay to allow DB to spin up
#    command: >
#      sh -c "echo Start &&
#              sleep 20 &&
#              ./bin/run.sh"
    ports:
    - "9000:9000"
    networks:
    - proxy
    - docker-proxy
    - sonarnet
#    environment:
#    - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
    volumes:
    - sonarqube-conf-data:/opt/sonarqube/conf
    - sonarqube-data:/opt/sonarqube/data
    - sonarqube-extensions-data:/opt/sonarqube/extensions
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.port=9000
        - com.df.httpsOnly=true
        - com.df.serviceDomain=sonarqube.${DOMAIN_NAME:-docker.usc.edu}

#  db:
#    image: postgres:${SONARQUBE_POSTGRES_TAG:-latest}
#    networks:
#    - sonarnet
#    environment:
#    - POSTGRES_USER=sonar
#    - POSTGRES_PASSWORD=sonar
#    volumes:
#    - sonarqube-postgresql-data:/var/lib/postgresql
#    # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
#    - sonarqube-postgresql-data-db:/var/lib/postgresql/data

  backup:
    image: osixia/backup-manager:${BACKUP_MANAGER_TAG:-latest}
    hostname: ${SONARQUBE_BACKUP_HOSTNAME:-sonarqube-backup}
    environment:
    - BACKUP_MANAGER_CRON_EXP=${BACKUP_CRON:-0 4 * * *}
#    - BACKUP_MANAGER_TARBALL_DIRECTORIES="/opt/sonarqube/data,/opt/sonarqube/conf,/opt/sonarqube/extensions"
    - BACKUP_MANAGER_TARBALL_DIRECTORIES="/opt/sonarqube/data"
    - BACKUP_MANAGER_ARCHIVE_METHOD="${BACKUP_ARCHIVE_METHOD:-tarball-incremental}"
    - BACKUP_MANAGER_UPLOAD_METHOD="${BACKUP_UPLOAD_METHOD:-none}"
    volumes:
    - backup:/data/backup
    - sonarqube-conf-data:/opt/sonarqube/conf
    - sonarqube-data:/opt/sonarqube/data
    - sonarqube-extensions-data:/opt/sonarqube/extensions
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  sonarnet:
    driver: overlay
  proxy:
    external: true
  docker-proxy:
    external: true

volumes:
  sonarqube-conf-data:
    external: true
    name: ${SONARQUBE_CONF:-sonarqube-conf-data}
  sonarqube-data:
    external: true
    name: ${SONARQUBE_DATA:-sonarqube-data}
  sonarqube-extensions-data:
    external: true
    name: ${SONARQUBE_EXTENSIONS:-sonarqube-extensions-data}
#  sonarqube-postgresql-data:
#    external: true
#    name: ${SONARQUBE_POSTGRESQL:-sonarqube-postgresql-data}
#  sonarqube-postgresql-data-db:
#    external: true
#    name: ${SONARQUBE_POSTGRESQL_DATA:-sonarqube-postgresql-data-db}
  backup:
    external: true
    name: ${BACKUP_DATA:-backup}
